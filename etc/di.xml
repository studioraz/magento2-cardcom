<?xml version="1.0"?>

<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <!-- start: Payment Method Facade configuration -->
    <type name="SR\Cardcom\Model\CardcomFacade">
        <arguments>
            <argument name="code" xsi:type="const">SR\Cardcom\Model\Ui\ConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">SR\Cardcom\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">SR\Cardcom\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">CardcomValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CardcomValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CardcomCommandPool</argument>
        </arguments>
    </type>
    <!-- end: Payment Method Facade configuration -->


    <!-- start: Value handlers infrastructure -->
    <virtualType name="CardcomValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CardcomConfigValueHandler</item>
                <item name="can_void" xsi:type="string">SR\Cardcom\Gateway\Config\CanVoidHandler</item>
                <item name="can_cancel" xsi:type="string">SR\Cardcom\Gateway\Config\CanVoidHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CardcomConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">SR\Cardcom\Gateway\Config\Config</argument>
        </arguments>
    </virtualType>
    <!-- end: Value handlers infrastructure -->


    <!-- start: Validators infrastructure -->
    <virtualType name="CardcomValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CardcomCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CardcomCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">SR\Cardcom\Gateway\Config\Config</argument>
        </arguments>
    </virtualType>
    <!-- end: Validators infrastructure -->


    <!-- start: Commands infrastructure -->
    <virtualType name="CardcomCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">CardcomAuthorizeCommand</item>
                <item name="capture" xsi:type="string">CardcomCaptureCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">CardcomFetchTransactionInfoCommand</item>
                <item name="initialize_iframe" xsi:type="string">CardcomInitializeIframeCommand</item>
                <item name="order" xsi:type="string">CardcomOrderCommand</item>
                <item name="refund" xsi:type="string">CardcomRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- end: Commands infrastructure -->


    <!-- start: Command: INITIALIZE IFRAME -->
    <virtualType name="CardcomInitializeIframeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CardcomInitializeIframeRequest</argument>
            <argument name="transferFactory" xsi:type="object">SR\Cardcom\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">SR\Cardcom\Gateway\Http\Client\Curl</argument>
            <argument name="validator" xsi:type="object">SR\Cardcom\Gateway\Validator\InitializeIframeResponseValidator</argument>
            <argument name="handler" xsi:type="object">CardcomInitializeIframeHandler</argument>
        </arguments>
    </virtualType>

    <virtualType name="CardcomInitializeIframeRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="api_endpoint" xsi:type="string">SR\Cardcom\Gateway\Request\ProfileApiEndpointDataBuilder</item>
                <item name="terminal_number" xsi:type="string">SR\Cardcom\Gateway\Request\TerminalNumberDataBuilder</item>
                <item name="user_name" xsi:type="string">SR\Cardcom\Gateway\Request\UserNameDataBuilder</item>
                <item name="language" xsi:type="string">SR\Cardcom\Gateway\Request\LanguageDataBuilder</item>
                <item name="operation" xsi:type="string">\SR\Cardcom\Gateway\Request\OperationDataBuilder</item>
                <item name="platform_version" xsi:type="string">\SR\Cardcom\Gateway\Request\PlatformDataBuilder</item>
                <item name="iframe" xsi:type="string">SR\Cardcom\Gateway\Request\IframeDataBuilder</item>
                <item name="order_invoice" xsi:type="string">SR\Cardcom\Gateway\Request\OrderInvoiceDataBuilder</item>
                <item name="tokenization_extra" xsi:type="string">SR\Cardcom\Gateway\Request\TokenizationExtraDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CardcomInitializeIframeHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="txn_id" xsi:type="string">SR\Cardcom\Gateway\Response\TransactionIdHandler</item>
                <item name="iframe_source_url" xsi:type="string">SR\Cardcom\Gateway\Response\IframeSourceUrlHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- end: Command: INITIALIZE IFRAME -->


    <!-- start: Command: FETCH TRANSACTION INFO -->
    <virtualType name="CardcomFetchTransactionInfoCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CardcomFetchTransactionInfoRequest</argument>
            <argument name="transferFactory" xsi:type="object">SR\Cardcom\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">SR\Cardcom\Gateway\Http\Client\Curl</argument>
            <argument name="validator" xsi:type="object">SR\Cardcom\Gateway\Validator\FetchTransactionInfoResponseValidator</argument>
            <argument name="handler" xsi:type="object">CardcomFetchTransactionInfoHandler</argument>
        </arguments>
    </virtualType>

    <virtualType name="CardcomFetchTransactionInfoRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="api_endpoint" xsi:type="string">SR\Cardcom\Gateway\Request\ProfileIndicatorApiEndpointDataBuilder</item>
                <item name="terminal_number" xsi:type="string">SR\Cardcom\Gateway\Request\TerminalNumberDataBuilder</item>
                <item name="user_name" xsi:type="string">SR\Cardcom\Gateway\Request\UserNameDataBuilder</item>
                <item name="transaction_id" xsi:type="string">SR\Cardcom\Gateway\Request\LowProfileCodeDataBuilder</item>
                <item name="platform_version" xsi:type="string">\SR\Cardcom\Gateway\Request\PlatformDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CardcomFetchTransactionInfoHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="transaction_id" xsi:type="string">SR\Cardcom\Gateway\Response\TransactionIdHandler</item>
                <item name="transaction_info" xsi:type="string">SR\Cardcom\Gateway\Response\TransactionInfoHandler</item>
                <item name="operation_billing" xsi:type="string">SR\Cardcom\Gateway\Response\OperationBillingHandler</item>
                <item name="operation_billing_token" xsi:type="string">SR\Cardcom\Gateway\Response\OperationBillingTokenHandler</item>
                <item name="operation_token_only" xsi:type="string">\SR\Cardcom\Gateway\Response\OperationTokenOnlyHandler</item>
                <item name="operation_suspended_deal" xsi:type="string">SR\Cardcom\Gateway\Response\OperationSuspendedDealHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- end: Command: FETCH TRANSACTION INFO -->


    <!-- start: Command: AUTHORIZE -->
    <!-- currently this is just a stub but can be implemented when it is needed -->
    <virtualType name="CardcomAuthorizeCommand" type="Magento\Payment\Gateway\Command\NullCommand"/>
    <!-- end: Command: AUTHORIZE -->


    <!-- start: Command: CAPTURE -->
    <!-- currently this is just a stub but can be implemented when it is needed -->
    <virtualType name="CardcomCaptureCommand" type="Magento\Payment\Gateway\Command\NullCommand"/>
    <!-- end: Command: CAPTURE -->


    <!-- start: Command: ORDER -->
    <!-- currently this is just a stub but can be implemented when it is needed -->
    <virtualType name="CardcomOrderCommand" type="Magento\Payment\Gateway\Command\NullCommand"/>
    <!-- end: Command: ORDER -->


    <!-- start: Command: REFUND -->
    <virtualType name="CardcomRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CardcomRefundRequest</argument>
            <argument name="transferFactory" xsi:type="object">SR\Cardcom\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">SR\Cardcom\Gateway\Http\Client\Curl</argument>
            <argument name="validator" xsi:type="object">SR\Cardcom\Gateway\Validator\RefundResponseValidator</argument>
            <argument name="handler" xsi:type="object">CardcomRefundHandler</argument>
        </arguments>
    </virtualType>

    <virtualType name="CardcomRefundRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="api_endpoint" xsi:type="string">SR\Cardcom\Gateway\Request\ApiEndpointRefundDataBuilder</item>
                <item name="terminal_number" xsi:type="string">SR\Cardcom\Gateway\Request\TerminalNumberDataBuilder</item>
                <item name="user_name" xsi:type="string">SR\Cardcom\Gateway\Request\UserNameDataBuilder</item>
                <item name="token" xsi:type="string">SR\Cardcom\Gateway\Request\TokenDataBuilder</item>
                <item name="platform_version" xsi:type="string">\SR\Cardcom\Gateway\Request\PlatformDataBuilder</item>
                <item name="credit_memo" xsi:type="string">SR\Cardcom\Gateway\Request\CreditMemoDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CardcomRefundHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="invoice_refund" xsi:type="string">SR\Cardcom\Gateway\Response\InvoiceRefundHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- end: Command: REFUND -->


    <!-- start: Configuration reader -->
    <type name="SR\Cardcom\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">SR\Cardcom\Model\Ui\ConfigProvider::CODE</argument>
        </arguments>
    </type>
    <!-- end: Configuration reader -->


    <type name="SR\Cardcom\Block\Info">
        <arguments>
            <argument name="config" xsi:type="object">SR\Cardcom\Gateway\Config\Config</argument>
        </arguments>
    </type>


    <!-- start: Cardcom Logger, initialized with CardcomConfig -->
    <type name="SR\Cardcom\Gateway\Logger\Logger">
        <arguments>
            <argument name="name" xsi:type="string">cardcom</argument>
            <argument name="handlers"  xsi:type="array">
                <item name="debug_cardcom" xsi:type="object">SR\Cardcom\Gateway\Logger\Handler\Debug</item>
            </argument>
        </arguments>
    </type>
    <virtualType name="CardcomLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="logger" xsi:type="object">SR\Cardcom\Gateway\Logger\Logger</argument>
            <argument name="config" xsi:type="object">SR\Cardcom\Gateway\Config\Config</argument>
        </arguments>
    </virtualType>

    <type name="SR\Cardcom\Gateway\Http\Client\Curl">
        <arguments>
            <argument name="customLogger" xsi:type="object">CardcomLogger</argument>
        </arguments>
    </type>

    <type name="SR\Cardcom\Controller\Checkout\PaymentNotify">
        <arguments>
            <argument name="customLogger" xsi:type="object">CardcomLogger</argument>
        </arguments>
    </type>
    <!-- end: Cardcom Logger, initialized with CardcomConfig -->
</config>
